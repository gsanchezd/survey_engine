<div class="matrix-container">
    <table class="matrix-table">
      <thead>
        <tr>
          <th class="matrix-row-header"></th>
          <% question.options.ordered.each do |option| %>
            <th class="matrix-column-header">
              <span class="column-label"><%= option.option_text %></span>
            </th>
          <% end %>
        </tr>
      </thead>
      <tbody>
        <% question.matrix_sub_questions.ordered.each do |sub_question| %>
          <% existing_answer = answers[sub_question.id] if defined?(answers) %>
          <tr class="matrix-row" data-row-id="<%= sub_question.id %>">
            <td class="matrix-row-label">
              <%= sub_question.matrix_row_text %>
              <% if sub_question.required? %>
                <span class="required-indicator">*</span>
              <% end %>
            </td>
            <% question.options.ordered.each do |option| %>
              <td class="matrix-cell">
                <%= radio_button_tag "answers[#{sub_question.id}][option_id]", 
                                   option.id, 
                                   existing_answer&.options&.include?(option),
                                   id: "matrix_#{sub_question.id}_option_#{option.id}",
                                   class: "matrix-radio",
                                   required: sub_question.required?,
                                   tabindex: "0",
                                   "aria-label": "#{sub_question.matrix_row_text}: #{option.option_text}",
                                   data: { 
                                     question_id: sub_question.id,
                                     option_id: option.id 
                                   } %>
              </td>
            <% end %>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>

  <% if question.help_text.present? %>
    <p class="question-help-text"><%= question.help_text %></p>
  <% end %>

  <!-- Show current answers if they exist -->
  <% if defined?(answers) && question.matrix_sub_questions.any? { |sq| answers[sq.id] } %>
    <div class="survey-current-answer">
      <strong>Respuestas actuales:</strong>
      <ul class="matrix-answers-list">
        <% question.matrix_sub_questions.ordered.each do |sub_question| %>
          <% if answers[sub_question.id] %>
            <li>
              <strong><%= sub_question.matrix_row_text %>:</strong> 
              <%= answers[sub_question.id].display_value %>
            </li>
          <% end %>
        <% end %>
      </ul>
    </div>
  <% end %>

  <script>
    // Enhance matrix keyboard navigation
    document.addEventListener('DOMContentLoaded', function() {
      const matrixTables = document.querySelectorAll('.matrix-table');
      
      matrixTables.forEach(table => {
        const radioButtons = table.querySelectorAll('.matrix-radio');
        
        // Add arrow key navigation
        radioButtons.forEach((radio, index) => {
          radio.addEventListener('keydown', function(e) {
            let newIndex = -1;
            const currentRow = this.closest('tr');
            const currentCell = this.closest('td');
            const cells = Array.from(currentRow.querySelectorAll('td.matrix-cell'));
            const currentCellIndex = cells.indexOf(currentCell);
            const rows = Array.from(table.querySelectorAll('tbody tr'));
            const currentRowIndex = rows.indexOf(currentRow);
            
            switch(e.key) {
              case 'ArrowRight':
                // Move to next option in same row
                if (currentCellIndex < cells.length - 1) {
                  const nextRadio = cells[currentCellIndex + 1].querySelector('.matrix-radio');
                  if (nextRadio) {
                    nextRadio.focus();
                    e.preventDefault();
                  }
                }
                break;
                
              case 'ArrowLeft':
                // Move to previous option in same row
                if (currentCellIndex > 0) {
                  const prevRadio = cells[currentCellIndex - 1].querySelector('.matrix-radio');
                  if (prevRadio) {
                    prevRadio.focus();
                    e.preventDefault();
                  }
                }
                break;
                
              case 'ArrowDown':
                // Move to same option in next row
                if (currentRowIndex < rows.length - 1) {
                  const nextRow = rows[currentRowIndex + 1];
                  const nextCells = nextRow.querySelectorAll('td.matrix-cell');
                  if (nextCells[currentCellIndex]) {
                    const nextRadio = nextCells[currentCellIndex].querySelector('.matrix-radio');
                    if (nextRadio) {
                      nextRadio.focus();
                      e.preventDefault();
                    }
                  }
                }
                break;
                
              case 'ArrowUp':
                // Move to same option in previous row
                if (currentRowIndex > 0) {
                  const prevRow = rows[currentRowIndex - 1];
                  const prevCells = prevRow.querySelectorAll('td.matrix-cell');
                  if (prevCells[currentCellIndex]) {
                    const prevRadio = prevCells[currentCellIndex].querySelector('.matrix-radio');
                    if (prevRadio) {
                      prevRadio.focus();
                      e.preventDefault();
                    }
                  }
                }
                break;
                
              case ' ':
              case 'Enter':
                // Select the radio button
                this.checked = true;
                e.preventDefault();
                break;
            }
          });
        });
      });
    });
  </script>